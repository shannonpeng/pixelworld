{{>head stylesheet="map" title="dashboard"}}

<body>

    {{>navbar}}
     <!-- Loader -->
    <div id="loader">
        <div class="spinner">
        </div>
        <div class="text"> Loading your location </div>
    </div>

    <!-- Map Div -->
    <div id="map"></div>

    <!-- Board Sidebar -->
    <link rel="stylesheet" href="/stylesheets/board.css"/>
    <div id="board-sidebar">
    </div>

    <script type="text/javascript">
        // Toggle sidebar
        var sidebarOpen = false;
        function toggleSidebar() {
            if (sidebarOpen) {
                $("#board-sidebar").removeClass("active");
                $(".back-arrow i").removeClass("fa-arrow-left");
                $(".back-arrow i").addClass("fa-arrow-right");
            }
            else {
                $("#board-sidebar").addClass("active");
                $(".back-arrow i").removeClass("fa-arrow-right");
                $(".back-arrow i").addClass("fa-arrow-left");
            }
            sidebarOpen = !sidebarOpen;
        }
        function openSidebar() {
            $("#board-sidebar").addClass("active");
            $(".back-arrow i").removeClass("fa-arrow-right");
            $(".back-arrow i").addClass("fa-arrow-left");
            sidebarOpen = true;
        }

        // Distance calculation
        // https://stackoverflow.com/questions/1502590/calculate-distance-between-two-points-in-google-maps-v3
        var rad = function(x) {
          return x * Math.PI / 180;
        };

        var pos = {};
        var b = {};

        var getDistance = function(p1, p2) {
            var R = 6378137; // Earthâ€™s mean radius in meter
            var dLat = rad(p2.lat - p1.lat);
            var dLong = rad(p2.lng - p1.lng);
            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(rad(p1.lat)) * Math.cos(rad(p2.lat)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            var d = R * c;
            return d; // returns the distance in meter
        };

        // Can I edit?
        function canEdit(target_lat, target_lng, radius = 60) {
            $("#paint").addClass('loading');
            $("#paint").removeClass('error');
            $("#board-container").css({cursor: "not-allowed"});
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var target = {
                        lat: target_lat,
                        lng: target_lng
                    };

                    var d = getDistance(pos, target);
                    if (d <= radius){
                        $("#paint").removeClass('loading');
                        $("#paint").removeClass('error');
                        $("#paint").addClass('show');
                        $("#board-container").css({cursor: "crosshair"});
                    }
                    else {
                        $("#paint").removeClass('loading');
                        $("#paint").removeClass('show');
                        $("#paint").addClass('error');

                    }
                });
            }
            else {
                $("#paint").removeClass('loading');
                $("#paint").removeClass('show');
                $("#paint").addClass('error');
                console.log('no location');
            }
        }
    </script>

    <script>
        const default_board_id = "5a6560f6bd7c3ca10baec104";
        var map, infoWindow;

        // https://stackoverflow.com/questions/29683688/show-hide-circle-on-google-maps-javascript-api
        function toggle_range(map, marker, range){
          google.maps.event.addListener(marker, 'mouseout', function () {
              range.setOptions({fillOpacity:0, strokeOpacity:0});
          });
          google.maps.event.addListener(marker, 'mouseover', function () {
              range.setOptions({fillOpacity: 0.2, strokeOpacity:0.3});
          });
        }

        function initMap() {
            var styledMapType = new google.maps.StyledMapType(
            [
                {
                    "featureType": "all",
                    "elementType": "all",
                    "stylers": [
                        {
                            "saturation": "32"
                        },
                        {
                            "lightness": "-3"
                        },
                        {
                            "visibility": "on"
                        },
                        {
                            "weight": "1.18"
                        }
                    ]
                },
                {
                    "featureType": "administrative",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "administrative.province",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "administrative.locality",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "administrative.neighborhood",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "administrative.neighborhood",
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "landscape",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "landscape.man_made",
                    "elementType": "all",
                    "stylers": [
                        {
                            "saturation": "-70"
                        },
                        {
                            "lightness": "14"
                        }
                    ]
                },
                {
                    "featureType": "landscape.natural",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "landscape.natural",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "landscape.natural.terrain",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "landscape.natural.terrain",
                    "elementType": "labels.text.stroke",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "landscape.natural.terrain",
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "all",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "labels.text",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "all",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "geometry.fill",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "labels.text",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.arterial",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.arterial",
                    "elementType": "labels.text",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "geometry.fill",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "geometry.stroke",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "labels.text",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "labels.text.stroke",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "transit",
                    "elementType": "labels.text",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit",
                    "elementType": "labels.text.stroke",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "geometry.fill",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "labels.text",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "labels.text.stroke",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit.station.airport",
                    "elementType": "all",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "transit.station.rail",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "on"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "all",
                    "stylers": [
                        {
                            "saturation": "100"
                        },
                        {
                            "lightness": "-14"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "labels",
                    "stylers": [
                        {
                            "visibility": "off"
                        },
                        {
                            "lightness": "12"
                        }
                    ]
                }
            ], {name: 'Styled Map'});

            // Create map
            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 42.354778, lng: -71.101988}, // Next House
                zoom: 6,
                zoomControl: false,
                scaleControl: false,
                mapTypeControl: false,
                scrollwheel: false,
                rotateControl: false,
                streetViewControl: false,
                disableDoubleClickZoom: true,
                fullscreenControl: false,
                zoomControl: false
            });

            // Render map markers for each board
            var icon = {
                url: '/images/marker.png', // custom marker image
                size: new google.maps.Size(96, 96),
                scaledSize: new google.maps.Size(48, 48),
                origin: new google.maps.Point(-24,-28)
            }
            {{#each boards}}
                var range = new google.maps.Circle({
                    strokeColor: '#69BBF3',
                    strokeOpacity: 0,
                    strokeWeight: 2,
                    fillColor: '#69BBF3',
                    fillOpacity: 0,
                    map: map,
                    center: { lat: parseFloat('{{latitude}}'), lng: parseFloat('{{longitude}}') },
                    radius: parseFloat({{radius}})
                  });
                var marker = new google.maps.Marker({
                    position: { lat: parseFloat('{{latitude}}'), lng: parseFloat('{{longitude}}') },
                    icon: icon,
                    label: { text: '{{boardInitials name}}', color: 'white'},
                    map: map,
                    optimized: false,
                    title: '{{_id}}'
                });
                toggle_range(map, marker, range);
                // Add on click listener
                google.maps.event.addListener(marker, 'click', function() {
                    var title = this.title;
                    $.ajax({ // GET board
                        type: "GET",
                        url: "board?" + title,
                        success: function(data) {
                          $("#board-sidebar").html(data); // Inject HTML into sidebar
                          openSidebar(); // Show sidebar
                          b.target = {};
                          b.target.lat = {{latitude}};
                          b.target.lng = {{longitude}};
                          b.radius = {{radius}};
                          canEdit({{latitude}}, {{longitude}}, {{radius}});
                        },
                        error: function(error) {
                          console.log('error');
                        }
                    });
                });
            {{/each}}

            // Create overlay view to group markers
            var overlay = new google.maps.OverlayView();
                overlay.draw = function () {
                    this.getPanes().markerLayer.id = 'markerLayer';
                };
            overlay.setMap(map);

            // Try HTML5 geolocation
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var my_circle = new google.maps.Circle({
                    strokeColor: '#FFBB2B',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#FFDD4A',
                    fillOpacity: 0.35,
                    map: map,
                    center: pos,
                    radius: 64
                  });
                var my_marker = new google.maps.Circle({
                    strokeColor: 'white',
                    strokeOpacity: 1,
                    strokeWeight: 4,
                    fillColor: '#69BBF3',
                    fillOpacity: 1,
                    map: map,
                    center: pos,
                    zIndex: 99,
                    radius: 4
                  });
                {{#if target_board}}
                {{else}} // not targeting a specific board
                    map.setCenter(pos); // pan map to current location
                    loader.classList.add('hide'); // hide loader
                {{/if}}
                }, function() {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
                map.setZoom(18);
                //Associate the styled map with the MapTypeId and set it to display
                map.mapTypes.set('styled_map', styledMapType);
                map.setMapTypeId('styled_map');
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }
        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            $("#loader").addClass('hide'); // hide loader
          /*infoWindow.setPosition(pos);
          infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
          infoWindow.open(map);
          */
        }

        {{#if target_board}}
        $.ajax({ // GET board
            type: "GET",
            url: "board?" + "{{target_board.id}}",
            success: function(data) {
              $("#board-sidebar").html(data); // Inject HTML into sidebar
              toggleSidebar(); // Show sidebar
              $("#loader").addClass('hide');
              var center = {};
              center.lat = {{target_board.latitude}};
              center.lng = {{target_board.longitude}};
              map.setCenter(center);
              b.target = {};
              b.target.lat = {{target_board.latitude}};
              b.target.lng = {{target_board.longitude}};
              b.radius = {{target_board.radius}};
              canEdit({{target_board.latitude}}, {{target_board.longitude}}, {{target_board.radius}});
            },
            error: function(error) {
              console.log('error');
            }
        });
        {{/if}}
    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key={{api}}&callback=initMap"></script>
    <script type="text/javascript" src="https://cdn.socket.io/socket.io-1.4.5.js"></script>

</body>
</html>
